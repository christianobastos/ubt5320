#cloud-config
autoinstall:
  version: 1
  identity:
    hostname: ubuntu5320
    username: user-ins
    password: "$6$rounds=4096$abcdefghijk..."
  locale: pt_BR
  keyboard:
    layout: br
  storage:
    config:
      - id: disk0
        type: disk
        match:
          name: nvme0n1
        ptable: gpt
        wipe: superblock-recursive
        preserve: false
        grub_device: true
        serial: {}
        number: 0
        partitions:
          - size: 512M
            wipe: superblock-recursive
            type: efi
            flag: boot
            number: 1
          - size: -1
            wipe: superblock-recursive
            type: linux
            flag: 'system'
            number: 2
      - id: luks0
        type: luks
        device: disk0-part2
        key: "$6$rounds=4096$abcdefghijk..."
        name: crypto
      - id: vg0
        type: lvm_volgroup
        devices:
          - luks0
        name: vg0
      - id: lv_root
        type: lvm_partition
        volgroup: vg0
        size: -1
        name: root
        mount_point: "/"
  disk_setup:
    /dev/sda1:
      table_type: gpt
      layout:
        - 100%
      overwrite: false
  user-data:
    users:
      - name: user-ins
        gecos: "user-ins"
        groups: [sudo]
        shell: /bin/bash
        passwd: "$6$rounds=4096$abcdefghijk..."
    bootcmd:
      - apt-get update
      - apt-get install -y cryptsetup
      - echo "Habilitando a criptografia do disco..."
      - cryptsetup luksFormat /dev/sda1 --key-file /etc/secure-keyfile
      - cryptsetup open /dev/sda1 disco_criptografado --key-file /etc/secure-keyfile
      - echo "Atualizando pacotes do sistema..."
      - apt-get upgrade -y
      - echo "Instalando htop..."
      - apt-get install -y htop
      - echo "Instalando Puppet..."
      - wget https://apt.puppetlabs.com/puppet8-release-noble.deb
      - dpkg -i puppet8-release-noble.deb
      - apt-get update
      - apt-get install -y puppet-agent
    runcmd:
      - ssh-keygen -t rsa -b 4096 -f /home/user-ins/.ssh/id_rsa -N "" 
      - PRIVATE_KEY_CONTENT=$(cat /home/user-ins/.ssh/id_rsa | sed 's/$/\\n/g' | tr -d '\n')
      - sed -i "s|troca essa senha|$PRIVATE_KEY_CONTENT|g" /etc/secure-keyfile
      - echo "Chave SSH gerada e arquivo atualizado."
    write_files:
      - path: /etc/secure-keyfile
        permissions: '0600'
        content: troca essa senha
